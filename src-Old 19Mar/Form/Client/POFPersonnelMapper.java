package Form.Client;

import BO.Client.ClientWiseCPTGroup;
import BO.Client.POFEmployeeMapperBO;
import Controller.Client.POFEmployeeMapperController;
import TableModel.Client.DetailMapperInfoTableModel;
import TableModel.Client.MasterMapperInfoTableModel;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;
import utilities.Constants;
import utilities.Database;
import utilities.DisplayLOV;
import utilities.TypeDetailId;

public class POFPersonnelMapper extends javax.swing.JInternalFrame {

    private String actionId = "";
    private String hmisId = "";

    public POFPersonnelMapper() {
        initComponents();
        this.setSize(780, 670);
        selectMasterMapperInfo();

    }
    POFEmployeeMapperBO objDetail = new POFEmployeeMapperBO();
    POFEmployeeMapperController ctlEm = new POFEmployeeMapperController();
    DisplayLOV lov = new DisplayLOV();

    List<POFEmployeeMapperBO> listDefType = new ArrayList();
    List<POFEmployeeMapperBO> listMapperDetail = new ArrayList();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        cboSearchType1 = new javax.swing.JComboBox<>();
        pnlPatientDetail = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDetailMapperInfo = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtSearchDesc = new javax.swing.JTextField();
        btndelete = new javax.swing.JButton();
        cboSearchType = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtInrPofId = new javax.swing.JTextField();
        txtInrPofDesc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtInrHmisId = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtPofId = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtPofDescription = new javax.swing.JTextField();
        txtHMISId = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMasterMapperInfo = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMasterMapperInfo1 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnTest = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(Constants.title+"POF Mapper");
        setFrameIcon(null);
        setPreferredSize(new java.awt.Dimension(735, 690));

        jPanel12.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel12.setForeground(new java.awt.Color(255, 255, 255));

        btnClear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(102, 0, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveMouseReleased(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCreate_User(evt);
            }
        });

        cboSearchType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Personnel", "HMIS"}));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboSearchType1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(cboSearchType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1))
        );

        pnlPatientDetail.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        pnlPatientDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personnel HMIS Mapper", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 16), new java.awt.Color(102, 0, 0))); // NOI18N
        pnlPatientDetail.setForeground(java.awt.SystemColor.activeCaption);

        jPanel6.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mapper Detail Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 0))); // NOI18N

        tblDetailMapperInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

                {null, null}
            },
            new String [] {
                "Group Name", "Parameter"
            }
        ));
        tblDetailMapperInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetailMapperInfoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDetailMapperInfoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblDetailMapperInfoMouseReleased(evt);
            }
        });
        tblDetailMapperInfo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDetailMapperInfoKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(tblDetailMapperInfo);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Search  :  ");

        txtSearchDesc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtSearchDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchDescActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btndeleteMouseReleased(evt);
            }
        });
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteCreate_User(evt);
            }
        });

        cboSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Personnel", "HMIS"}));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Description : ");

        txtInrPofId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtInrPofId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInrPofIdActionPerformed(evt);
            }
        });

        txtInrPofDesc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtInrPofDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInrPofDescActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("POF Id : ");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("HMIS Id : ");

        txtInrHmisId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtInrHmisId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInrHmisIdActionPerformed(evt);
            }
        });

        btnInsert.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnInsert.setText("+");
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnInsertMouseReleased(evt);
            }
        });
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertCreate_User(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("POF Id : ");

        txtPofId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPofId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPofIdActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Description : ");

        txtPofDescription.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPofDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPofDescriptionActionPerformed(evt);
            }
        });

        txtHMISId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtHMISId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHMISIdActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEditMouseReleased(evt);
            }
        });
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCreate_User(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInrPofId, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInrPofDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInrHmisId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsert, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(txtPofId, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPofDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                            .addComponent(txtSearchDesc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHMISId)
                            .addComponent(cboSearchType, 0, 99, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(6, 6, 6))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete)
                    .addComponent(cboSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPofId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPofDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHMISId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInrPofId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInrPofDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInrHmisId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert)))
        );

        jPanel7.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HMIS Personnel Definition", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 0))); // NOI18N

        tblMasterMapperInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

                {null, null, null}
            },
            new String [] {
                "Sr.", "Group Name", "CRTD BY"
            }
        ));
        tblMasterMapperInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfoMouseReleased(evt);
            }
        });
        tblMasterMapperInfo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblMasterMapperInfoKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tblMasterMapperInfo);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personnel Mapper Testing", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 0))); // NOI18N

        tblMasterMapperInfo1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

                {null, null, null}
            },
            new String [] {
                "Sr.", "Group Name", "CRTD BY"
            }
        ));
        tblMasterMapperInfo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfo1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfo1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblMasterMapperInfo1MouseReleased(evt);
            }
        });
        tblMasterMapperInfo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblMasterMapperInfo1KeyReleased(evt);
            }
        });
        jScrollPane7.setViewportView(tblMasterMapperInfo1);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Sync Id : ");

        jTextField1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnTest.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnTest.setText("Test");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTest, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTest, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPatientDetailLayout = new javax.swing.GroupLayout(pnlPatientDetail);
        pnlPatientDetail.setLayout(pnlPatientDetailLayout);
        pnlPatientDetailLayout.setHorizontalGroup(
            pnlPatientDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlPatientDetailLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPatientDetailLayout.setVerticalGroup(
            pnlPatientDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientDetailLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnlPatientDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPatientDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnlPatientDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblDetailMapperInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetailMapperInfoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDetailMapperInfoMouseClicked

    private void tblDetailMapperInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetailMapperInfoMousePressed
        
    }//GEN-LAST:event_tblDetailMapperInfoMousePressed

    private void tblDetailMapperInfoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetailMapperInfoMouseReleased
        // TODO add your handling code here:
        if (listMapperDetail.isEmpty() || tblDetailMapperInfo.getSelectedRow() < 0) {
            return;
        }
        objDetail = listMapperDetail.get(tblDetailMapperInfo.getSelectedRow());
        txtPofId.setText(objDetail.getPofId());
        txtPofDescription.setText(objDetail.getPofDescription());
        hmisId = objDetail.getHmisId();
        hmisId = objDetail.getUpdateHmisId();
        txtHMISId.setText(objDetail.getHmisDescription());
    }//GEN-LAST:event_tblDetailMapperInfoMouseReleased

    private void tblDetailMapperInfoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDetailMapperInfoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDetailMapperInfoKeyReleased

    private void txtSearchDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchDescActionPerformed

        listMapperDetail = ctlEm.selectDescriptioWiseMapper(actionId,
                txtSearchDesc.getText().toUpperCase().trim());
        selectDetailMapperInfo(listMapperDetail);
    }//GEN-LAST:event_txtSearchDescActionPerformed

    private void btnSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseReleased

    private void btnSaveCreate_User(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCreate_User

        if (!checkInformation()) {
            return;
        }
        POFEmployeeMapperBO objInr = new POFEmployeeMapperBO();
        objInr.setPofId(txtInrPofId.getText().trim());
        objInr.setPofDescription(txtInrPofDesc.getText().trim());
        objInr.setHmisId(hmisId);
        objInr.setActionId(actionId);

        if (ctlEm.insertMapper(objInr)) {
            JOptionPane.showMessageDialog(null, "Record Save Successfully.");
            listMapperDetail = ctlEm.selectActionWiseMapper(actionId);
            selectDetailMapperInfo(listMapperDetail);
        } else {
            JOptionPane.showMessageDialog(null, "Unable Save Record.");
        }
    }//GEN-LAST:event_btnSaveCreate_User

    private void tblMasterMapperInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfoMouseClicked

    private void tblMasterMapperInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfoMousePressed

    private void tblMasterMapperInfoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfoMouseReleased

        if (tblMasterMapperInfo.getSelectedRow() < 0 || listDefType.isEmpty()) {
            return;
        }
        POFEmployeeMapperBO obj = listDefType.get(tblMasterMapperInfo.getSelectedRow());
        actionId = obj.getDefId();
        listMapperDetail = ctlEm.selectActionWiseMapper(actionId);
        selectDetailMapperInfo(listMapperDetail);

    }//GEN-LAST:event_tblMasterMapperInfoMouseReleased

    private void tblMasterMapperInfoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMasterMapperInfoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfoKeyReleased

    private void btnEditMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditMouseReleased

    private void btnEditCreate_User(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCreate_User
        // TODO add your handling code here:
        int confirmation = JOptionPane.showConfirmDialog(null, "You Are Going "
                + "To Edit the Information. \nDo you want to Edit?");
        if (confirmation != 0) {
            return;
        }
        objDetail.setPofDescription(txtPofDescription.getText().trim());
        objDetail.setActionId(actionId);
        objDetail.setUpdateHmisId(hmisId);
        objDetail.setUpdatePofId(txtPofId.getText().trim());

        if (ctlEm.updateMapper(objDetail)) {
            JOptionPane.showMessageDialog(null, "Record Edit Successfully.");
            listMapperDetail = ctlEm.selectActionWiseMapper(actionId);
            selectDetailMapperInfo(listMapperDetail);
        } else {
            JOptionPane.showMessageDialog(null, "Unable Edit Record.");
        }
    }//GEN-LAST:event_btnEditCreate_User

    private void tblMasterMapperInfo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfo1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfo1MouseClicked

    private void tblMasterMapperInfo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfo1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfo1MousePressed

    private void tblMasterMapperInfo1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMasterMapperInfo1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfo1MouseReleased

    private void tblMasterMapperInfo1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMasterMapperInfo1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMasterMapperInfo1KeyReleased

    private void btndeleteCreate_User(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteCreate_User

        if (listMapperDetail.isEmpty() || tblDetailMapperInfo.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Record to Delete.");
            return;
        }
        int confirmation = JOptionPane.showConfirmDialog(null, "You Are Going "
                + "To Delete. \nDo you want to Delete?");
        if (confirmation != 0) {
            return;
        }
        if (ctlEm.deleteMapper(objDetail)) {
            JOptionPane.showMessageDialog(null, "Record Deleted Successfully.");
            listMapperDetail = ctlEm.selectActionWiseMapper(actionId);
            selectDetailMapperInfo(listMapperDetail);
        } else {
            JOptionPane.showMessageDialog(null, "Unable Deleted Record.");
        }
    }//GEN-LAST:event_btndeleteCreate_User

    private void btndeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndeleteMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteMouseReleased

    private void txtInrPofIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInrPofIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInrPofIdActionPerformed

    private void txtInrPofDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInrPofDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInrPofDescActionPerformed

    private void txtInrHmisIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInrHmisIdActionPerformed
        // TODO add your handling code here:
        lov.LOVDefinitionSelection(actionId, txtInrHmisId.getText().trim(), this);
        if (Constants.lovID.equalsIgnoreCase("ID")) {
            return;
        }
        hmisId = Constants.lovID;
        txtInrHmisId.setText(Constants.lovDescription);
    }//GEN-LAST:event_txtInrHmisIdActionPerformed

    private void btnInsertMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInsertMouseReleased

    private void btnInsertCreate_User(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertCreate_User
        // TODO add your handling code here:

    }//GEN-LAST:event_btnInsertCreate_User

    private void txtPofIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPofIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPofIdActionPerformed

    private void txtPofDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPofDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPofDescriptionActionPerformed

    private void txtHMISIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHMISIdActionPerformed
        // TODO add your handling code here:
        lov.LOVDefinitionSelection(actionId, txtInrHmisId.getText().trim(), this);
        if (Constants.lovID.equalsIgnoreCase("ID")) {
            return;
        }
        hmisId = Constants.lovID;
        txtHMISId.setText(Constants.lovDescription);
    }//GEN-LAST:event_txtHMISIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton btndelete;
    private javax.swing.JComboBox<String> cboSearchType;
    private javax.swing.JComboBox<String> cboSearchType1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel pnlPatientDetail;
    private javax.swing.JTable tblDetailMapperInfo;
    private javax.swing.JTable tblMasterMapperInfo;
    private javax.swing.JTable tblMasterMapperInfo1;
    private javax.swing.JTextField txtHMISId;
    private javax.swing.JTextField txtInrHmisId;
    private javax.swing.JTextField txtInrPofDesc;
    private javax.swing.JTextField txtInrPofId;
    private javax.swing.JTextField txtPofDescription;
    private javax.swing.JTextField txtPofId;
    private javax.swing.JTextField txtSearchDesc;
    // End of variables declaration//GEN-END:variables

    public void clear() {
        txtHMISId.setText("");
        txtInrHmisId.setText("");
        txtInrPofDesc.setText("");
        txtInrPofId.setText("");
        txtPofDescription.setText("");
        txtPofId.setText("");
        txtSearchDesc.setText("");

        listDefType.clear();
        listMapperDetail.clear();
        tblMasterMapperInfo.setModel(new MasterMapperInfoTableModel(listDefType));
        tblDetailMapperInfo.setModel(new DetailMapperInfoTableModel(listMapperDetail));
    }

    private void selectMasterMapperInfo() {
        listDefType = ctlEm.selectDefinitionType();
        if (listDefType.isEmpty()) {
            List<POFEmployeeMapperBO> list = new ArrayList();
            list.add(new POFEmployeeMapperBO());
            tblMasterMapperInfo.setModel(new MasterMapperInfoTableModel(list));
        } else {
            tblMasterMapperInfo.setModel(new MasterMapperInfoTableModel(listDefType));
        }
        tblMasterMapperInfo.addRowSelectionInterval(0, 0);
        ListSelectionModel selectionModel = tblMasterMapperInfo.getSelectionModel();
        tblMasterMapperInfo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        setMasterMapperInfoColumnsWidths();
        selectionModel.setSelectionInterval(0, 0);
        Constants.tablelook.setJTableEnvironment(tblMasterMapperInfo);

    }

    public void setMasterMapperInfoColumnsWidths() {
        TableColumn column = null;
        for (int i = 0; i < tblMasterMapperInfo.getColumnCount(); i++) {
            column = tblMasterMapperInfo.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(10);
            } else if (i == 1) {
                column.setPreferredWidth(40);
            } else {
                column.setPreferredWidth(200);
            }
        }
    }

    private void selectDetailMapperInfo(List<POFEmployeeMapperBO> listDetail) {

        if (listDetail.isEmpty()) {
            List<POFEmployeeMapperBO> list = new ArrayList();
            list.add(new POFEmployeeMapperBO());
            tblDetailMapperInfo.setModel(new DetailMapperInfoTableModel(list));
        } else {
            tblDetailMapperInfo.setModel(new DetailMapperInfoTableModel(listDetail));
        }
        tblDetailMapperInfo.addRowSelectionInterval(0, 0);
        ListSelectionModel selectionModel = tblDetailMapperInfo.getSelectionModel();
        tblDetailMapperInfo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        setDetailMapperInfoColumnsWidths();
        selectionModel.setSelectionInterval(0, 0);
        Constants.tablelook.setJTableEnvironment(tblDetailMapperInfo);
    }

    public void setDetailMapperInfoColumnsWidths() {
        TableColumn column = null;
        for (int i = 0; i < tblDetailMapperInfo.getColumnCount(); i++) {
            column = tblDetailMapperInfo.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(35);
            } else if (i == 1) {
                column.setPreferredWidth(60);
            } else if (i == 2) {
                column.setPreferredWidth(200);
            } else if (i == 3) {
                column.setPreferredWidth(60);
            } else if (i == 4) {
                column.setPreferredWidth(200);
            }
        }
    }

    private boolean checkInformation() {
        if (actionId.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Please Select HMIS Personnel "
                    + "Definition to Insert, From Table.");
            return false;
        }
        if (txtInrHmisId.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please Select HMIS Id.");
            txtInrHmisId.requestFocus();
            return false;
        }
        if (txtInrPofDesc.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please Enter POF Description.");
            txtInrPofDesc.requestFocus();
            return false;
        }
        if (txtInrPofId.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please Enter POF Id.");
            txtInrPofId.requestFocus();
            return false;
        }

        return true;
    }

}
